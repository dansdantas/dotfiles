#!/usr/bin/sh

# -------------------------------------------------------------------
# Misc
# -------------------------------------------------------------------

export PATH="$PATH:/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:$HOME/.local/bin:$HOME/bin"

# XDG
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"

# Term definition
if [ -z "$TMUX" ]
then
  export TERM='xterm-256color'
else
  export TERM='tmux-256color'
fi

# History
export HISTFILE="$XDG_DATA_HOME/zsh/history" # History file
export HISTSIZE=10000000                     # History size in memory
export SAVEHIST=10000000                     # The number of histsize
export LISTMAX=50                            # The size of asking history
 
# LANGUAGE must be set by en_US
export LANGUAGE="en_US.UTF-8"
export LANG="${LANGUAGE}"
export LC_ALL="${LANGUAGE}"
export LC_CTYPE="${LANGUAGE}"

# Monitors
export EDP0=eDP-1-1
export HDMI0=HDMI0
export CUDA_CACHE_PATH="$XDG_CACHE_HOME/nv"

# -------------------------------------------------------------------
# Terminal
# -------------------------------------------------------------------

export GNUPGHOME="$XDG_DATA_HOME/gnupg"
export PATHMARKS_FILE="$XDG_DATA_HOME/pathmarks/file"

# Antigen
export ANTIGEN_HOME="$XDG_CONFIG_HOME/antigen"
export ADOTDIR=$ANTIGEN_HOME
export ANTIGEN_LOG=$HOME/antigen.log

# Tmux
export FZF_COMMAND=$([ -z "$TMUX" ] && echo "fzf" || echo "fzf-tmux")
export TMUX_PLUGIN_MANAGER_PATH="$XDG_DATA_HOME/tmux/plugins"

# Less
export LESSKEY="$XDG_CONFIG_HOME/less/lesskey"
export LESSHISTFILE="$XDG_CACHE_HOME/less/history"

# Terminfo
export TERMINFO="$XDG_DATA_HOME/terminfo"
export TERMINFO_DIRS="$XDG_DATA_HOME/terminfo:/usr/share/terminfo"

# -------------------------------------------------------------------
# Languages
# -------------------------------------------------------------------

# Ruby
export RBENV_ROOT="$XDG_DATA_HOME/rbenv"

export BUNDLE_USER_CONFIG="$XDG_CONFIG_HOME/bundle"
export BUNDLE_USER_CACHE="$XDG_CACHE_HOME/bundle"
export BUNDLE_USER_PLUGIN="$XDG_DATA_HOME/bundle"

export GEM_HOME="$XDG_DATA_HOME/gem"
export GEM_SPEC_CACHE="$XDG_CACHE_HOME/gem"

export SOLARGRAPH_CACHE="$XDG_CACHE_HOME/solargraph"

export PRYRC="$XDG_CONFIG_HOME/pry/pryrc"

rbenv() {
  eval "$(command rbenv init -)"
  rbenv "$@"
}

# PyEnv
export PYENV_ROOT="$XDG_DATA_HOME/pyenv"
export PATH="$PATH:$PYENV_ROOT/bin"

pyenv() {
  eval "$(command pyenv init -)"
  eval "$(command pyenv virtualenv-init -)"
  pyenv "$@"
}

# Golang
export GOPATH="$XDG_DATA_HOME/go"
export PATH="$PATH:$GOPATH/bin"

# Java 
export JAVA_HOME="/usr/lib/jvm/java-8-openjdk"
export JRE_HOME="$JAVA_HOME/jre"
export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH
export PATH JAVA_HOME
export CLASSPATH=$JAVA_HOME/lib/tools.jar
export CLASSPATH=.:$CLASSPATH
export PATH JAVA_HOME CLASSPATH

# Nvm
export NVM_LAZY_LOAD=true
export NVM_DIR="$XDG_DATA_HOME/nvm"

export NPM_CONFIG_USERCONFIG=$XDG_CONFIG_HOME/npm/npmrc

# Node
export NODE_PATH=$NODE_PATH:"$NVM_ROOT/versions/node/v12.6.0/bin/node"
export NODE_PATH=$NODE_PATH:"$NVM_ROOT/versions/node/v12.6.0/lib/node_modules"
export PATH=$NODE_PATH:$PATH

# Rust
export CARGO_HOME=$XDG_DATA_HOME/cargo
export PATH=$CARGO_HOME/bin:$PATH

# Android
export ANDROID_SDK_HOME="$XDG_CONFIG_HOME/android"
export ADB_VENDOR_KEY="$XDG_CONFIG_HOME/android"

# AWS
export AWS_SHARED_CREDENTIALS_FILE="$XDG_CONFIG_HOME/aws/credentials"
export AWS_CONFIG_FILE="$XDG_CONFIG_HOME/aws/config"

# Docker
export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"

#!/usr/bin/sh

# -------------------------------------------------------------------
# Misc
# -------------------------------------------------------------------

export PATH="$PATH:/usr/local/bin"
export PATH="$PATH:/usr/local/sbin"
export PATH="$PATH:/usr/sbin"
export PATH="$PATH:/usr/bin"
export PATH="$PATH:$HOME/.local/bin"
export PATH="$PATH:$HOME/bin"

# History
export HISTFILE="$XDG_DATA_HOME/zsh/history" # History file
export HISTSIZE=10000000                     # History size in memory
export SAVEHIST=10000000                     # The number of histsize
export LISTMAX=50                            # The size of asking history
HISTDUP=erase
SAVEHIST=$HISTSIZE

# LANGUAGE must be set by en_US
export LANGUAGE="en_US.UTF-8"
export LANG="${LANGUAGE}"
export LC_ALL="${LANGUAGE}"
export LC_CTYPE="${LANGUAGE}"

# Monitors
export EDP0=eDP-1-1
export HDMI0=HDMI0
export CUDA_CACHE_PATH="$XDG_CACHE_HOME/nv"

if [ -z "$MACOS" ]; then
	# Term definition
	if [ -z "$TMUX" ]; then
		export TERM='xterm-256color'
	else
		export TERM='tmux-256color'
	fi

	# Android
	export ANDROID_SDK_HOME="$XDG_CONFIG_HOME/android"
	export ADB_VENDOR_KEY="$XDG_CONFIG_HOME/android"

	# AWS
	export AWS_SHARED_CREDENTIALS_FILE="$XDG_CONFIG_HOME/aws/credentials"
	export AWS_CONFIG_FILE="$XDG_CONFIG_HOME/aws/config"

	# Java
	export JAVA_HOME="/usr/lib/jvm/java-8-openjdk"
	export JRE_HOME="$JAVA_HOME/jre"
	export CLASSPATH="$JAVA_HOME/lib/tools.jar"

	# SSH
	export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"
else
	# Java
	export JAVA_HOME="/opt/homebrew/Cellar/openjdk/21.0.2"

	# Brew
	if [[ -f "/opt/homebrew/bin/brew" ]]; then
		# If you're using macOS, you'll want this enabled
		eval "$(/opt/homebrew/bin/brew shellenv)"
	fi
fi

# -------------------------------------------------------------------
# Terminal
# -------------------------------------------------------------------

export GNUPGHOME="$XDG_DATA_HOME/gnupg"
export PATHMARKS_FILE="$XDG_DATA_HOME/pathmarks/file"
eval "$(zoxide init --cmd cd zsh)"

# Tmux
export FZF_COMMAND=$([ -z "$TMUX" ] && echo "fzf" || echo "fzf-tmux")
export TMUX_PLUGIN_MANAGER_PATH="$XDG_DATA_HOME/tmux/plugins"

# Less
export LESSKEY="$XDG_CONFIG_HOME/less/lesskey"
export LESSHISTFILE="$XDG_CACHE_HOME/less/history"

# Terminfo
export TERMINFO="$XDG_DATA_HOME/terminfo"
export TERMINFO_DIRS="$XDG_DATA_HOME/terminfo:/usr/share/terminfo"

# Docker
export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"

# Ripgrep
export RIPGREP_CONFIG_PATH="$XDG_CONFIG_HOME/rg/config"

# Added by OrbStack: command-line tools and integration
source ~/.orbstack/shell/init.zsh 2>/dev/null || :

# -------------------------------------------------------------------
# Languages
# -------------------------------------------------------------------

# Ruby
export RBENV_ROOT="$XDG_DATA_HOME/rbenv"

export BUNDLE_USER_CONFIG="$XDG_CONFIG_HOME/bundle"
export BUNDLE_USER_CACHE="$XDG_CACHE_HOME/bundle"
export BUNDLE_USER_PLUGIN="$XDG_DATA_HOME/bundle"

export GEM_HOME="$XDG_DATA_HOME/gem"
export GEM_SPEC_CACHE="$XDG_CACHE_HOME/gem"

export SOLARGRAPH_CACHE="$XDG_CACHE_HOME/solargraph"

export PRYRC="$XDG_CONFIG_HOME/pry/pryrc"

rbenv() {
	if [[ $RBENV_LOADED != true ]]; then
		eval "$(command rbenv init -)"
		export RBENV_LOADED=true
	fi

	rbenv "$@"
}

# PyEnv
export PYENV_ROOT="$XDG_DATA_HOME/pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

pyenv() {
	if [[ $PYENV_LOADED != true ]]; then
		eval "$(command pyenv init -)"
		export PYENV_LOADED=true
	fi

	pyenv "$@"
}

# Golang
export GOPATH="${XDG_DATA_HOME:-$HOME/.local/share}/go"
export GOBIN="$GOPATH/bin"
export PATH="$PATH:$GOBIN"

export PATH="$JAVA_HOME/bin:$PATH"
export PATH="$JRE_HOME/bin:$PATH"

# Nvm
export NVM_LAZY_LOAD=true
export NVM_DIR="$XDG_DATA_HOME/nvm"
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
export NVM_COMPLETION=true

# Node
export NODE_PATH="$NVM_DIR/versions/node/v15.11.0"
export PATH="$NODE_PATH/bin/node:$PATH"
export PATH="$NODE_PATH/lib/node_modules:$PATH"

# Rust
export CARGO_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/cargo"
export PATH="$CARGO_HOME/bin:$PATH"
. "$CARGO_HOME/env"

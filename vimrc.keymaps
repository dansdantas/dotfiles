" ===============  Map save file to leader ==============================
nnoremap <leader>w :w!<cr>
nnoremap <leader>x :x!<cr>
nnoremap <leader>q :q<cr>

"================  Move lines using Ctrl+j and Ctrl+k ===================
" nnoremap <C-j> :m .+1<CR>==
" nnoremap <C-k> :m .-2<CR>==
" inoremap <C-j> <Esc>:m .+1<CR>==gi
" inoremap <C-k> <Esc>:m .-2<CR>==gi
" vnoremap <C-j> :m '>+1<CR>gv=gv
" vnoremap <C-k> :m '<-2<CR>gv=gv

" =============== Auto indent pasted text ===============================
nnoremap p p=`]<C-o>
nnoremap P P=`]<C-o>

" =============== Automatic enter on paste mode on paste ================
inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()

" =============== Remove white spaces ===================================
nnoremap <Leader>rtw :%s/\s\+$//e<CR>

" =============== TrimWhiteSpace ========================================
nnoremap <silent> <Leader>rts :call TrimWhiteSpace()<CR>

" =============== Search on visual selection ============================
vnoremap <silent> gv :call VisualSelection('gv', '')<CR>

" =============== Ag commands ===========================================
nnoremap <leader>a :Ag
nnoremap <leader>n :cn<cr>
nnoremap <leader>p :cp<zw/vim-maximizercr>
nnoremap <leader>nf :cnf<cr>
nnoremap <leader>pf :cpf<cr>

" =============== Move to split ========== ==============================
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" ================ Movements ============================================

" Move vertically by visual line
nnoremap j gj
nnoremap k gk

" Move to beginning/end of line
nnoremap B ^
nnoremap E $

" Highlight last inserted text
nnoremap gV `[v`]

" Toggle gundo
nnoremap <leader>uzw/vim-maximizer :GundoToggle<CR>

" Save session
nnoremap <leader>s :mksession!<CR>

" ================ BufferGator ==========================================
" Looper buffers
"let g:buffergator_mru_cycle_loop = 1

" Go to the previous buffer open
nnoremap <leader>jj :BuffergatorMruCyclePrev<cr>

" Go to the next buffer open
nnoremap <leader>kk :BuffergatorMruCycleNext<cr>

" View the entire list of buffers open
nnoremap <leader>bl :BuffergatorOpen<cr>

" Shared bindings from Solution #1 from earlier
nnoremap <leader>T :enew<cr>
nnoremap <leader>bq :bp <BAR> bd #<cr>
" This allows buffers to be hidden if you've modified a buffer.
" This is almost a must if you wish to use buffers in this way.
" set hidden

" To open a new empty buffer
" This replaces :tabnew which I used to bind to this mapping
" nnoremap <leader>T :enew<cr>

" Move to the next buffer
" nnoremap <leader>l :bnext<CR>

" Move to the previous buffer
" nnoremap <leader>h :bprevious<CR>

" Close the current buffer and move to the previous one
" This replicates the idea of closing a tab
" nnoremap <leader>bq :bp <BAR> bd #<CR>

" Show all open buffers and their status
" nnoremap <leader>bl :ls<CR>

" Easy bindings for its various modes
" nnoremap <leader>bb :CtrlPBuffer<cr>
" nnoremap <leader>bm :CtrlPMixed<cr>
" nnoremap <leader>bs :CtrlPMRU<cr>
"
" ================= Show current highlight ==============================

nnoremap <F10> :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
\ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
\ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>

" ================= Preview ctags definition ============================

nnoremap <C-]> <Esc>:exe "ptjump " . expand("<cword>")<Esc>

" ================= Vim easy align ======================================

" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

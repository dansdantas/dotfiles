# # Smart pane switching with awareness of vim splits.
# # Source: https://github.com/christoomey/vim-tmux-navigator
# # bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
# # bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
# # bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
# # bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
# # bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# # Use vi keybindings for tmux commandline input.
# # Note that to get command mode you need to hit ESC twice...
# set -g status-keys vi

# # Use vi keybindings in copy and choice modes
# setw -g mode-keys vi

# # easily toggle synchronization (mnemonic: e is for echo)
# # sends input to all panes in a given window.
# bind e setw synchronize-panes on
# bind E setw synchronize-panes off

# # set first window to index 1 (not 0) to map more to the keyboard layout...
# set-option -g base-index 1
# set-window-option -g pane-base-index 1

# Init
# Tmux uses a 'control key', let's set it to 'Ctrl-a'
# Reason: 'Ctrl-a' is easier to reach than 'Ctrl-b'
set -g prefix C-a
unbind C-b

# Enable mouse scrolling
set -g mouse on

# Bigger history
set -g history-limit 10000

# set Zsh as your default Tmux shell
set-option -g default-shell $HOME/.linuxbrew/bin/zsh

# Tmux should be pretty, we need 256 color for that
# set -g default-terminal "xterm-256color"
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# command delay? We don't want that, make it short
set -sg escape-time 1

# Set the numbering of windows to go from 1 instead
# of 0 - silly programmers :|
set-option -g base-index 1
setw -g pane-base-index 1

# Allow us to reload our Tmux configuration while
# using Tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Getting interesting now, we use the vertical and horizontal
# # Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Pane
bind-key x kill-pane
bind-key & kill-window
bind c new-window -c '#{pane_current_path}' # Create new window

# Vim-like pane movement
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# Screen like binding for last window
unbind l
bind C-a last-window
